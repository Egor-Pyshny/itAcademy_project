name: Services - Periodic

on:
  pull_request:
  push:
  workflow_dispatch:


jobs:
  toolchain:
    name:  Ô∏èToolchain is built.
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}
    steps:
      - name: Code is pulled from repo.
        uses: actions/checkout@v3

      - name: Set up Python 3.10.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.9

      - name: Toolchain is cached and restored.
        id: cache-toolchain
        uses: actions/cache@v3
        with:
          key: ${{ steps.cache-key.outputs.value }}
          path: |
            .local

      - name: Install venv
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Start linters.
        run: |
          poetry run black --check .
          poetry run isort --check-only .
          poetry run flake8 ./bbsh_api/ ./djangoProject/ ./services/
        working-directory: .

  linters:
    name: Linters approve code.
    needs:
      - toolchain
    runs-on: ubuntu-latest
    steps:
      - name: Code is pulled from repo.
        uses: actions/checkout@v3

      - name: Toolchain is restored from cache.
        id: restore-toolchain
        uses: actions/cache@v3
        with:
          fail-on-cache-miss: true
          key: ${{ needs.toolchain.outputs.cache-key }}
          path: |
            .local

      - name: Start linters.
        run: |
          poetry env info
          poetry run black --check .
          poetry run isort --check-only .
          poetry run flake8 ./bbsh_api/ ./djangoProject/ ./services/
        working-directory: .
